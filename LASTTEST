import wave
import struct
import numpy as np
import os
import math
import speech_recognition as sr
import pandas as pd
import tkinter.filedialog
from googletrans import Translator  

def translate_text(text, target_lang='en'):
   
    translator = Translator()
    translated = translator.translate(text, dest=target_lang)
    print(f"翻訳結果 ({target_lang}): {translated.text}")
    return translated.text

def wav_to_text(wavfile):
    r = sr.Recognizer()

    with sr.AudioFile(wavfile) as source:
        audio = r.record(source)

    text = r.recognize_google(audio, language='ja-JP')
    print(f"音声認識結果: {text}")

    translated_text = translate_text(text, target_lang='en')

    return text, translated_text

def cut_wav(filename, time):  

    wavf = filename
    wr = wave.open(wavf, 'r')

    ch = wr.getnchannels()
    width = wr.getsampwidth()
    fr = wr.getframerate()
    fn = wr.getnframes()
    total_time = 1.0 * fn / fr 
    integer = math.floor(total_time * 100)  
    t = int(time * 100)  
    frames = int(ch * fr * t / 100)
    num_cut = int(integer // t)
    data = wr.readframes(wr.getnframes())
    wr.close()
    X = np.frombuffer(data, dtype=np.int16)

    df_x = pd.DataFrame(columns=['No', '音声ファイル', '変換結果 (日本語)', '翻訳結果 (英語)'])

    for i in range(num_cut + 1):
        outf = out_dir + '/' + str(i) + '.wav' 
        if i > 0:
            start_cut = int(i * frames) - int(180000)
        else:
            start_cut = int(i * frames)

        end_cut = int(i * frames + frames)
        Y = X[start_cut:end_cut]
        outd = struct.pack("h" * len(Y), *Y)

        ww = wave.open(outf, 'w')
        ww.setnchannels(ch)
        ww.setsampwidth(width)
        ww.setframerate(fr)
        ww.writeframes(outd)
        ww.close()

        text, translated_text = wav_to_text(outf)
        df_x.loc[i] = [i, str(i) + '.wav', text, translated_text]
    
   
    with pd.ExcelWriter(out_file) as writer:
        df_x.to_excel(writer, sheet_name='結果', index=False)


out_dir = "result"
file = os.path.exists(out_dir)

if file == False:
    
    os.mkdir(out_dir)

fTyp = [("", "*.wav")]
iDir = os.path.abspath(os.path.dirname(__file__))
f_name = tkinter.filedialog.askopenfilename(filetypes=fTyp, initialdir=iDir)

cut_time = 60  
out_file = "result/result.xlsx"  


cut_wav(f_name, float(cut_time))
